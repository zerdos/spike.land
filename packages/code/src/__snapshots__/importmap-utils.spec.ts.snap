// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`importMapReplace > Basic imports: basic named imports 1`] = `
{
  "code": "import { prop, prop2 } from "foo";",
  "result": "/** importMapReplace */
import { prop, prop2 } from "http://localhost:3000/foo?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=prop,prop2";",
}
`;

exports[`importMapReplace > Basic imports: default and named imports together 1`] = `
{
  "code": "import React, { useState, useEffect } from "react";",
  "result": "/** importMapReplace */
import React, { useState, useEffect } from "react";",
}
`;

exports[`importMapReplace > Basic imports: default import 1`] = `
{
  "code": "import React from "react";",
  "result": "/** importMapReplace */
import React from "react";",
}
`;

exports[`importMapReplace > Basic imports: multiple named imports with complex names 1`] = `
{
  "code": "import { camelCase, snake_case, PascalCase, CONSTANT_CASE } from "utils";",
  "result": "/** importMapReplace */
import { camelCase, snake_case, PascalCase, CONSTANT_CASE } from "http://localhost:3000/utils?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=camelCase,snake_case,PascalCase,CONSTANT_CASE";",
}
`;

exports[`importMapReplace > Basic imports: specific exports 1`] = `
{
  "code": "import { __await, __rest } from "tslib";",
  "result": "/** importMapReplace */
import { __await, __rest } from "http://localhost:3000/tslib?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=__await,__rest";",
}
`;

exports[`importMapReplace > Basic imports: specific named imports with aliases 1`] = `
{
  "code": "import { __await as aw, __rest as restNow} from "tslib";",
  "result": "/** importMapReplace */
import { __await as aw, __rest as restNow} from "http://localhost:3000/tslib?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=__await,__rest";",
}
`;

exports[`importMapReplace > Dynamic imports: dynamic imports 1`] = `
{
  "code": "const mod = await import("module");",
  "result": "/** importMapReplace */
const mod = await import("http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled");",
}
`;

exports[`importMapReplace > Dynamic imports: dynamic imports with complex expressions 1`] = `
{
  "code": "const mod = await import(process.env.NODE_ENV === 'production' ? 'prod' : 'dev');",
  "result": "/** importMapReplace */
const mod = await import(process.env.NODE_ENV === 'production' ? 'prod' : 'dev');",
}
`;

exports[`importMapReplace > Dynamic imports: dynamic imports with relative paths 1`] = `
{
  "code": "const mod = await import('./relative/path/module');",
  "result": "/** importMapReplace */
const mod = await import("./relative/path/module.mjs");",
}
`;

exports[`importMapReplace > Dynamic imports: dynamic imports with string concatenation 1`] = `
{
  "code": "const mod = await import('./modules/' + name + '/index');",
  "result": "/** importMapReplace */
const mod = await import('./modules/' + name + '/index');",
}
`;

exports[`importMapReplace > Dynamic imports: dynamic imports with template literals 1`] = `
{
  "code": "const mod = await import(\`./modules/\${name}\`);",
  "result": "/** importMapReplace */
const mod = await import(\`./modules/\${name}\`);",
}
`;

exports[`importMapReplace > Edge cases: code with line comments 1`] = `
{
  "code": "
        // This is a comment
        import { foo } from "module"; // End line comment
        // Another comment
        export { bar } from "module2";
        // Final comment
      ",
  "result": "/** importMapReplace */

        // This is a comment
        import { foo } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo"; // End line comment
        // Another comment
        export { bar } from "http://localhost:3000/module2?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=bar";
        // Final comment
      ",
}
`;

exports[`importMapReplace > Edge cases: live path with index.js appending 1`] = `
{
  "code": "import { Component } from "/live/components";",
  "result": "/** importMapReplace */
import { Component } from "/live/components";",
}
`;

exports[`importMapReplace > Edge cases: multiple import patterns in same file 1`] = `
{
  "code": "
        import { foo } from "module1";
        export { bar } from "module2";
        const mod = await import("module3");
        import "module4";
      ",
  "result": "/** importMapReplace */

        import { foo } from "http://localhost:3000/module1?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo";
        export { bar } from "http://localhost:3000/module2?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=bar";
        const mod = await import("http://localhost:3000/module3?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled");
        import "http://localhost:3000/module4?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";
      ",
}
`;

exports[`importMapReplace > Edge cases: should not transform when bundling flag is false 1`] = `
{
  "code": "import { comp } from "http://localhost:3000/special?bundle=false";",
  "result": "/** importMapReplace */
import { comp } from "http://localhost:3000/special?bundle=false";",
}
`;

exports[`importMapReplace > Export variations: export all from a module 1`] = `
{
  "code": "export * from "module";",
  "result": "/** importMapReplace */
export * from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > Export variations: export all from relative module 1`] = `
{
  "code": "export * from "./utils/helpers";",
  "result": "/** importMapReplace */
export * from "./utils/helpers.mjs";",
}
`;

exports[`importMapReplace > Export variations: export with destructuring 1`] = `
{
  "code": "export const { foo, bar } = await import("module");",
  "result": "/** importMapReplace */
export const { foo, bar } = await import("http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled");",
}
`;

exports[`importMapReplace > Export variations: export with rename 1`] = `
{
  "code": "export { foo as default } from "module";",
  "result": "/** importMapReplace */
export { foo as default } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo";",
}
`;

exports[`importMapReplace > Export variations: import with export 1`] = `
{
  "code": "export { foo } from "bar";",
  "result": "/** importMapReplace */
export { foo } from "http://localhost:3000/bar?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo";",
}
`;

exports[`importMapReplace > Export variations: multiple exports 1`] = `
{
  "code": "export { foo, bar as default, baz as customName } from "module";",
  "result": "/** importMapReplace */
export { foo, bar as default, baz as customName } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo,bar,baz";",
}
`;

exports[`importMapReplace > Export variations: re-export default 1`] = `
{
  "code": "export { default } from "module";",
  "result": "/** importMapReplace */
export { default } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=default";",
}
`;

exports[`importMapReplace > Import variations: mixed default and namespace imports 1`] = `
{
  "code": "import Default, * as All from "my-module";",
  "result": "/** importMapReplace */
import Default, * as All from "http://localhost:3000/my-module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > Import variations: namespace imports 1`] = `
{
  "code": "import * as utils from "utils";",
  "result": "/** importMapReplace */
import * as utils from "http://localhost:3000/utils?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > Import variations: side-effect only imports 1`] = `
{
  "code": "import "polyfill";",
  "result": "/** importMapReplace */
import "http://localhost:3000/polyfill?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > Module types: CSS modules 1`] = `
{
  "code": "import styles from "./styles.module.css";",
  "result": "/** importMapReplace */
import styles from "./styles.module.css";",
}
`;

exports[`importMapReplace > Module types: JSON modules 1`] = `
{
  "code": "import data from "./data.json";",
  "result": "/** importMapReplace */
import data from "./data.json";",
}
`;

exports[`importMapReplace > Module types: SVG modules 1`] = `
{
  "code": "import logo from "./logo.svg";",
  "result": "/** importMapReplace */
import logo from "./logo.svg";",
}
`;

exports[`importMapReplace > Module types: WASM modules 1`] = `
{
  "code": "import * as wasm from "./module.wasm";",
  "result": "/** importMapReplace */
import * as wasm from "./module.wasm";",
}
`;

exports[`importMapReplace > Module types: text file imports 1`] = `
{
  "code": "import text from "./file.txt";",
  "result": "/** importMapReplace */
import text from "./file.txt";",
}
`;

exports[`importMapReplace > Package imports: TypeScript path aliases 1`] = `
{
  "code": "import { component } from "@components/Button";",
  "result": "/** importMapReplace */
import { component } from "http://localhost:3000/@components/Button?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=component";",
}
`;

exports[`importMapReplace > Package imports: Vue package default import 1`] = `
{
  "code": "import Vue from "vue";",
  "result": "/** importMapReplace */
import Vue from "http://localhost:3000/vue?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > Package imports: external dependency import 1`] = `
{
  "code": "import { motion } from "framer-motion";",
  "result": "/** importMapReplace */
import { motion } from "framer-motion";",
}
`;

exports[`importMapReplace > Package imports: scoped packages 1`] = `
{
  "code": "import { component } from "@scope/package/component";",
  "result": "/** importMapReplace */
import { component } from "http://localhost:3000/@scope/package/component?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=component";",
}
`;

exports[`importMapReplace > Package imports: tilde aliases 1`] = `
{
  "code": "import { button } from "~components/Button";",
  "result": "/** importMapReplace */
import { button } from "http://localhost:3000/~components/Button?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=button";",
}
`;

exports[`importMapReplace > Path imports: current directory marker 1`] = `
{
  "code": "import { tool } from "./././current/path";",
  "result": "/** importMapReplace */
import { tool } from "./././current/path.mjs";",
}
`;

exports[`importMapReplace > Path imports: deep nested paths 1`] = `
{
  "code": "import { util } from "../../../../very/deep/nested/path";",
  "result": "/** importMapReplace */
import { util } from "../../../../very/deep/nested/path.mjs";",
}
`;

exports[`importMapReplace > Path imports: directory imports 1`] = `
{
  "code": "import "./components/";",
  "result": "/** importMapReplace */
import "./components/index.mjs";",
}
`;

exports[`importMapReplace > Path imports: existing .js extensions 1`] = `
{
  "code": "import { func } from "./lib.js";",
  "result": "/** importMapReplace */
import { func } from "./lib.js";",
}
`;

exports[`importMapReplace > Path imports: parent directory relative imports 1`] = `
{
  "code": "import { shared } from "../shared/utils";",
  "result": "/** importMapReplace */
import { shared } from "../shared/utils.mjs";",
}
`;

exports[`importMapReplace > Path imports: relative imports with trailing slash 1`] = `
{
  "code": "import module from "./folder/";",
  "result": "/** importMapReplace */
import module from "./folder/index.mjs";",
}
`;

exports[`importMapReplace > Path imports: relative imports without extension 1`] = `
{
  "code": "import { helper } from "./utils/helper";",
  "result": "/** importMapReplace */
import { helper } from "./utils/helper.mjs";",
}
`;

exports[`importMapReplace > Path imports: should preserve existing extensions in relative imports 1`] = `
{
  "code": "import { component } from "./components/Button";",
  "result": "/** importMapReplace */
import { component } from "./components/Button.mjs";",
}
`;

exports[`importMapReplace > Path imports: should prevent double .mjs extension 1`] = `
{
  "code": "import "./file.mjs";",
  "result": "/** importMapReplace */
import "./file.mjs";",
}
`;

exports[`importMapReplace > Special syntax: import with $-prefixed variables 1`] = `
{
  "code": "import { $state, $effect } from "framework";",
  "result": "/** importMapReplace */
import { $state, $effect } from "http://localhost:3000/framework?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=$state,$effect";",
}
`;

exports[`importMapReplace > Special syntax: import with empty specifiers 1`] = `
{
  "code": "import {} from "empty-module";",
  "result": "/** importMapReplace */
import {} from "http://localhost:3000/empty-module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > Special syntax: imports with comments 1`] = `
{
  "code": "// This is a comment
      import { foo } from "bar"; // End of line comment",
  "result": "/** importMapReplace */
// This is a comment
      import { foo } from "http://localhost:3000/bar?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo"; // End of line comment",
}
`;

exports[`importMapReplace > Special syntax: imports with unicode characters 1`] = `
{
  "code": "import { π, λ, γ } from "math-symbols";",
  "result": "/** importMapReplace */
import { π, λ, γ } from "http://localhost:3000/math-symbols?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=π,λ,γ";",
}
`;

exports[`importMapReplace > Special syntax: imports with unusual whitespace 1`] = `
{
  "code": "import    {    foo   ,   bar   }    from     "module"   ;",
  "result": "/** importMapReplace */
import    {    foo   ,   bar   }    from     "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo,bar"   ;",
}
`;

exports[`importMapReplace > Special syntax: inline comments in import 1`] = `
{
  "code": "import /* inline comment */ { foo } from "module";",
  "result": "/** importMapReplace */
import /* inline comment */ { foo } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo";",
}
`;

exports[`importMapReplace > Special syntax: multi-line imports 1`] = `
{
  "code": "import {
        foo,
        bar,
        baz
      } from "module";",
  "result": "/** importMapReplace */
import {
        foo,
        bar,
        baz
      } from "module";",
}
`;

exports[`importMapReplace > Special syntax: should prevent double processing 1`] = `
{
  "code": "/** importMapReplace */
      import { foo } from "bar";",
  "result": "/** importMapReplace */
      import { foo } from "bar";",
}
`;

exports[`importMapReplace > Special syntax: single quotes in imports 1`] = `
{
  "code": "import module from 'my-module';",
  "result": "/** importMapReplace */
import module from "http://localhost:3000/my-module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > URL imports: URLs with complex query parameters 1`] = `
{
  "code": "import { module } from "https://example.com/module?version=1.2.3&format=esm&debug=true";",
  "result": "/** importMapReplace */
import { module } from "https://example.com/module?version=1.2.3&format=esm&debug=true";",
}
`;

exports[`importMapReplace > URL imports: URLs with hash fragments 1`] = `
{
  "code": "import { section } from "module#section";",
  "result": "/** importMapReplace */
import { section } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=section#section";",
}
`;

exports[`importMapReplace > URL imports: URLs with version tags 1`] = `
{
  "code": "import { lib } from "https://esm.sh/lodash@4.17.21";",
  "result": "/** importMapReplace */
import { lib } from "https://esm.sh/lodash@4.17.21";",
}
`;

exports[`importMapReplace > URL imports: data URLs 1`] = `
{
  "code": "import { foo } from "data:text/javascript,export const foo = 'bar'";",
  "result": "/** importMapReplace */
import { foo } from "data:text/javascript,export const foo = 'bar'";",
}
`;

exports[`importMapReplace > URL imports: http URLs from different origin 1`] = `
{
  "code": "import { lib } from "http://example.com/lib?bundle=true&exports=foo";",
  "result": "/** importMapReplace */
import { lib } from "http://example.com/lib?bundle=true&exports=foo";",
}
`;

exports[`importMapReplace > URL imports: http URLs from same origin 1`] = `
{
  "code": "import { lib } from "http://localhost:3000/lib?bundle=true&exports=foo";",
  "result": "/** importMapReplace */
import { lib } from "http://localhost:3000/lib?bundle=true&exports=foo";",
}
`;

exports[`importMapReplace > URL imports: https URLs 1`] = `
{
  "code": "import { secure } from "https://example.com/secure-module";",
  "result": "/** importMapReplace */
import { secure } from "https://example.com/secure-module";",
}
`;

exports[`importMapReplace > URL imports: live URLs 1`] = `
{
  "code": "import { Component } from "/live/components/Button";",
  "result": "/** importMapReplace */
import { Component } from "/live/components/Button";",
}
`;

exports[`importMapReplace > URL imports: query and hash in imports 1`] = `
{
  "code": "import { lib } from "./module?foo=bar#section";",
  "result": "/** importMapReplace */
import { lib } from "./module.mjs?foo=bar#section";",
}
`;

exports[`importMapReplace > URL imports: relative imports with query parameters 1`] = `
{
  "code": "import { util } from "./utils?foo=bar";",
  "result": "/** importMapReplace */
import { util } from "./utils.mjs?foo=bar";",
}
`;

exports[`importMapReplace > Worker imports: service worker registration 1`] = `
{
  "code": "import { register } from "@/workers/service-worker";",
  "result": "/** importMapReplace */
import { register } from "http://localhost:3000/@/workers/service-worker.mjs";",
}
`;

exports[`importMapReplace > Worker imports: should transpile worker files to js with bare import 1`] = `
{
  "code": "import "@/workers/monaco-editor.worker";",
  "result": "/** importMapReplace */
import "http://localhost:3000/@/workers/monaco-editor.worker.js";",
}
`;

exports[`importMapReplace > Worker imports: should transpile worker files to js with wildcard import 1`] = `
{
  "code": "import * as Monaco from "@/workers/monaco-editor.worker";",
  "result": "/** importMapReplace */
import * as Monaco from "http://localhost:3000/@/workers/monaco-editor.worker.mjs";",
}
`;

exports[`importMapReplace > Worker imports: web worker imports 1`] = `
{
  "code": "import Worker from "@/workers/computation.worker";",
  "result": "/** importMapReplace */
import Worker from "http://localhost:3000/@/workers/computation.worker.mjs";",
}
`;

exports[`importMapReplace > should handle binary data input 1`] = `
"/** importMapReplace */
import { foo } from "http://localhost:3000/bar?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo";"
`;

exports[`importMapReplace > should respect custom importMap 1`] = `
{
  "code": "import { feature } from "custom-module";",
  "result": "/** importMapReplace */
import { feature } from "custom-module";",
}
`;
