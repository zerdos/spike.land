// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`importMapReplace > CSS modules 1`] = `
{
  "code": "import styles from "./styles.module.css";",
  "result": "/** importMapReplace */
import styles from "./styles.module.css.mjs";",
}
`;

exports[`importMapReplace > JSON modules 1`] = `
{
  "code": "import data from "./data.json";",
  "result": "/** importMapReplace */
import data from "./data.json.mjs";",
}
`;

exports[`importMapReplace > SVG modules 1`] = `
{
  "code": "import logo from "./logo.svg";",
  "result": "/** importMapReplace */
import logo from "./logo.svg.mjs";",
}
`;

exports[`importMapReplace > TypeScript path aliases 1`] = `
{
  "code": "import { component } from "@components/Button";",
  "result": "/** importMapReplace */
import { component } from "http://localhost:3000/@components/Button?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=component";",
}
`;

exports[`importMapReplace > URLs with complex query parameters 1`] = `
{
  "code": "import { module } from "https://example.com/module?version=1.2.3&format=esm&debug=true";",
  "result": "/** importMapReplace */
import { module } from "https://example.com/module?version=1.2.3&format=esm&debug=true";",
}
`;

exports[`importMapReplace > URLs with hash fragments 1`] = `
{
  "code": "import { section } from "module#section";",
  "result": "/** importMapReplace */
import { section } from "http://localhost:3000/module#section?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=section";",
}
`;

exports[`importMapReplace > URLs with version tags 1`] = `
{
  "code": "import { lib } from "https://esm.sh/lodash@4.17.21";",
  "result": "/** importMapReplace */
import { lib } from "https://esm.sh/lodash@4.17.21";",
}
`;

exports[`importMapReplace > Vue package default import 1`] = `
{
  "code": "import Vue from "vue";",
  "result": "/** importMapReplace */
import Vue from "http://localhost:3000/vue?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > WASM modules 1`] = `
{
  "code": "import * as wasm from "./module.wasm";",
  "result": "/** importMapReplace */
import * as wasm from "./module.wasm.mjs";",
}
`;

exports[`importMapReplace > basic named imports 1`] = `
{
  "code": "import { prop, prop2 } from "foo";",
  "result": "/** importMapReplace */
import { prop, prop2 } from "http://localhost:3000/foo?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=prop,prop2";",
}
`;

exports[`importMapReplace > current directory marker 1`] = `
{
  "code": "import { tool } from "./././current/path";",
  "result": "/** importMapReplace */
import { tool } from "./././current/path.mjs";",
}
`;

exports[`importMapReplace > data URLs 1`] = `
{
  "code": "import { foo } from "data:text/javascript,export const foo = 'bar'";",
  "result": "/** importMapReplace */
import { foo } from "data:text/javascript,export const foo = /index.js"bar'";",
}
`;

exports[`importMapReplace > deep nested paths 1`] = `
{
  "code": "import { util } from "../../../../very/deep/nested/path";",
  "result": "/** importMapReplace */
import { util } from "../../../../very/deep/nested/path.mjs";",
}
`;

exports[`importMapReplace > default and named imports together 1`] = `
{
  "code": "import React, { useState, useEffect } from "react";",
  "result": "/** importMapReplace */
import React, { useState, useEffect } from "react";",
}
`;

exports[`importMapReplace > default import 1`] = `
{
  "code": "import React from "react";",
  "result": "/** importMapReplace */
import React from "react";",
}
`;

exports[`importMapReplace > directory imports 1`] = `
{
  "code": "import "./components/";",
  "result": "/** importMapReplace */
import "./components/.mjs";",
}
`;

exports[`importMapReplace > dynamic imports 1`] = `
{
  "code": "const mod = await import("module");",
  "result": "/** importMapReplace */
const mod = await import("http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled");",
}
`;

exports[`importMapReplace > dynamic imports with complex expressions 1`] = `
{
  "code": "const mod = await import(process.env.NODE_ENV === 'production' ? 'prod' : 'dev');",
  "result": "/** importMapReplace */
const mod = await import(process.env.NODE_ENV === 'production' ? 'prod' : 'dev');",
}
`;

exports[`importMapReplace > dynamic imports with relative paths 1`] = `
{
  "code": "const mod = await import('./relative/path/module');",
  "result": "/** importMapReplace */
const mod = await import("./relative/path/module.mjs");",
}
`;

exports[`importMapReplace > dynamic imports with string concatenation 1`] = `
{
  "code": "const mod = await import('./modules/' + name + '/index');",
  "result": "/** importMapReplace */
const mod = await import('./modules/' + name + '/index');",
}
`;

exports[`importMapReplace > dynamic imports with template literals 1`] = `
{
  "code": "const mod = await import(\`./modules/\${name}\`);",
  "result": "/** importMapReplace */
const mod = await import(\`./modules/\${name}\`);",
}
`;

exports[`importMapReplace > existing .js extensions 1`] = `
{
  "code": "import { func } from "./lib.js";",
  "result": "/** importMapReplace */
import { func } from "./lib.js.mjs";",
}
`;

exports[`importMapReplace > export all from a module 1`] = `
{
  "code": "export * from "module";",
  "result": "/** importMapReplace */
export * from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > export all from relative module 1`] = `
{
  "code": "export * from "./utils/helpers";",
  "result": "/** importMapReplace */
export * from "./utils/helpers.mjs";",
}
`;

exports[`importMapReplace > export with destructuring 1`] = `
{
  "code": "export const { foo, bar } = await import("module");",
  "result": "/** importMapReplace */
export const { foo, bar } = await import("http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled");",
}
`;

exports[`importMapReplace > export with rename 1`] = `
{
  "code": "export { foo as default } from "module";",
  "result": "/** importMapReplace */
export { foo as default } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > http URLs from different origin 1`] = `
{
  "code": "import { lib } from "http://example.com/lib?bundle=true&exports=foo";",
  "result": "/** importMapReplace */
import { lib } from "http://example.com/lib?bundle=true&exports=foo";",
}
`;

exports[`importMapReplace > http URLs from same origin 1`] = `
{
  "code": "import { lib } from "http://localhost:3000/lib?bundle=true&exports=foo";",
  "result": "/** importMapReplace */
import { lib } from "http://localhost:3000/lib?bundle=true&exports=foo";",
}
`;

exports[`importMapReplace > https URLs 1`] = `
{
  "code": "import { secure } from "https://example.com/secure-module";",
  "result": "/** importMapReplace */
import { secure } from "https://example.com/secure-module";",
}
`;

exports[`importMapReplace > import with empty specifiers 1`] = `
{
  "code": "import {} from "empty-module";",
  "result": "/** importMapReplace */
import {} from "http://localhost:3000/empty-module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > import with export 1`] = `
{
  "code": "export { foo } from "bar";",
  "result": "/** importMapReplace */
export { foo } from "http://localhost:3000/bar?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > imports with comments 1`] = `
{
  "code": "// This is a comment
    import { foo } from "bar"; // End of line comment",
  "result": "/** importMapReplace */
import { foo } from "http://localhost:3000/bar?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo"; // End of line comment",
}
`;

exports[`importMapReplace > imports with unicode characters 1`] = `
{
  "code": "import { π, λ, γ } from "math-symbols";",
  "result": "/** importMapReplace */
import { π, λ, γ } from "math-symbols";",
}
`;

exports[`importMapReplace > imports with unusual whitespace 1`] = `
{
  "code": "import    {    foo   ,   bar   }    from     "module"   ;",
  "result": "/** importMapReplace */
import    {    foo   ,   bar   }    from     "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo,bar"   ;",
}
`;

exports[`importMapReplace > inline comments in import 1`] = `
{
  "code": "import /* inline comment */ { foo } from "module";",
  "result": "/** importMapReplace */
import /* inline comment */ { foo } from "module";",
}
`;

exports[`importMapReplace > live URLs 1`] = `
{
  "code": "import { Component } from "/live/components/Button";",
  "result": "/** importMapReplace */
import { Component } from "/live/components/Button/index.js";",
}
`;

exports[`importMapReplace > mixed default and namespace imports 1`] = `
{
  "code": "import Default, * as All from "my-module";",
  "result": "/** importMapReplace */
import Default, * as All from "http://localhost:3000/my-module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > multi-line imports 1`] = `
{
  "code": "import {
      foo,
      bar,
      baz
    } from "module";",
  "result": "/** importMapReplace */
import {
foo,
bar,
baz
} from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=foo,bar,baz";",
}
`;

exports[`importMapReplace > multiple exports 1`] = `
{
  "code": "export { foo, bar as default, baz as customName } from "module";",
  "result": "/** importMapReplace */
export { foo, bar as default, baz as customName } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > multiple named imports with complex names 1`] = `
{
  "code": "import { camelCase, snake_case, PascalCase, CONSTANT_CASE } from "utils";",
  "result": "/** importMapReplace */
import { camelCase, snake_case, PascalCase, CONSTANT_CASE } from "http://localhost:3000/utils?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=camelCase,snake_case,PascalCase,CONSTANT_CASE";",
}
`;

exports[`importMapReplace > namespace imports 1`] = `
{
  "code": "import * as utils from "utils";",
  "result": "/** importMapReplace */
import * as utils from "http://localhost:3000/utils?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > parent directory relative imports 1`] = `
{
  "code": "import { shared } from "../shared/utils";",
  "result": "/** importMapReplace */
import { shared } from "../shared/utils.mjs";",
}
`;

exports[`importMapReplace > query and hash in imports 1`] = `
{
  "code": "import { lib } from "./module?foo=bar#section";",
  "result": "/** importMapReplace */
import { lib } from "./module?foo=bar#section.mjs";",
}
`;

exports[`importMapReplace > re-export default 1`] = `
{
  "code": "export { default } from "module";",
  "result": "/** importMapReplace */
export { default } from "http://localhost:3000/module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > relative imports with query parameters 1`] = `
{
  "code": "import { util } from "./utils?foo=bar";",
  "result": "/** importMapReplace */
import { util } from "./utils?foo=bar.mjs";",
}
`;

exports[`importMapReplace > relative imports with trailing slash 1`] = `
{
  "code": "import module from "./folder/";",
  "result": "/** importMapReplace */
import module from "./folder/.mjs";",
}
`;

exports[`importMapReplace > relative imports without extension 1`] = `
{
  "code": "import { helper } from "./utils/helper";",
  "result": "/** importMapReplace */
import { helper } from "./utils/helper.mjs";",
}
`;

exports[`importMapReplace > scoped packages 1`] = `
{
  "code": "import { component } from "@scope/package/component";",
  "result": "/** importMapReplace */
import { component } from "http://localhost:3000/@scope/package/component?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=component";",
}
`;

exports[`importMapReplace > service worker registration 1`] = `
{
  "code": "import { register } from "@/workers/service-worker";",
  "result": "/** importMapReplace */
import { register } from "/@/workers/service-worker.mjs";",
}
`;

exports[`importMapReplace > should not transform when bundling flag is false 1`] = `
{
  "code": "import { comp } from "http://localhost:3000/special?bundle=false";",
  "result": "/** importMapReplace */
import { comp } from "http://localhost:3000/special?bundle=false";",
}
`;

exports[`importMapReplace > should preserve existing extensions in relative imports 1`] = `
{
  "code": "import { component } from "./components/Button";",
  "result": "/** importMapReplace */
import { component } from "./components/Button.mjs";",
}
`;

exports[`importMapReplace > should prevent double .mjs extension 1`] = `
{
  "code": "import "./file.mjs";",
  "result": "/** importMapReplace */
import "./file.mjs";",
}
`;

exports[`importMapReplace > should prevent double processing 1`] = `
{
  "code": "/** importMapReplace */
    import { foo } from "bar";",
  "result": "/** importMapReplace */
    import { foo } from "bar";",
}
`;

exports[`importMapReplace > should transpile worker files to js with bare import 1`] = `
{
  "code": "import "@/workers/monaco-editor.worker";",
  "result": "/** importMapReplace */
import "http://localhost:3000/@/workers/monaco-editor.worker.js";",
}
`;

exports[`importMapReplace > should transpile worker files to js with wildcard import 1`] = `
{
  "code": "import * as Monaco from "@/workers/monaco-editor.worker";",
  "result": "/** importMapReplace */
import * as Monaco from "/@/workers/monaco-editor.worker.mjs";",
}
`;

exports[`importMapReplace > side-effect only imports 1`] = `
{
  "code": "import "polyfill";",
  "result": "/** importMapReplace */
import "/polyfill?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > single quotes in imports 1`] = `
{
  "code": "import module from 'my-module';",
  "result": "/** importMapReplace */
import module from "http://localhost:3000/my-module?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled";",
}
`;

exports[`importMapReplace > specific exports 1`] = `
{
  "code": "import { __await, __rest } from "tslib";",
  "result": "/** importMapReplace */
import { __await, __rest } from "http://localhost:3000/tslib?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=__await,__rest";",
}
`;

exports[`importMapReplace > specific named imports with aliases 1`] = `
{
  "code": "import { __await as aw, __rest as restNow} from "tslib";",
  "result": "/** importMapReplace */
import { __await as aw, __rest as restNow} from "http://localhost:3000/tslib?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=__await,__rest";",
}
`;

exports[`importMapReplace > text file imports 1`] = `
{
  "code": "import text from "./file.txt";",
  "result": "/** importMapReplace */
import text from "./file.txt.mjs";",
}
`;

exports[`importMapReplace > tilde aliases 1`] = `
{
  "code": "import { button } from "~components/Button";",
  "result": "/** importMapReplace */
import { button } from "http://localhost:3000/~components/Button?bundle=true&external=react,react-dom,framer-motion,@emotion/react,@emotion/styled&exports=button";",
}
`;

exports[`importMapReplace > web worker imports 1`] = `
{
  "code": "import Worker from "@/workers/computation.worker";",
  "result": "/** importMapReplace */
import Worker from "/@/workers/computation.worker.mjs";",
}
`;
