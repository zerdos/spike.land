// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should update search replace 13`] = `
"// landing.tsx
import React, { useState, useEffect, createContext, useContext } from "react";
import { ImageLoader } from "@/components/ui/image-loader";
import { Card, CardContent } from "@/components/ui/card";
import { Code, Zap, Bot, Share2, Package, Download } from "lucide-react";
import { motion } from "framer-motion";
import Prompt from "@/components/ui/start-with-prompt";

//bubu
// Creathey hellope
const ThemeContext = createContext({
  isDarkMode: false,
  toggleTheme: () => {},
});

// Feature component
const Feature = ({ icon: Icon, title, description, color, imagePrompt }) => {
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      whileHover={{ scale: 1.03 }}
      whileInView={{
        y: [0, -10, 0],
        transition: {
          y: {
            repeat: Infinity,
            repeatType: "reverse",
            duration: 2,
            ease: "easeInOut",
          },
        },
      }}>
      <Card className='h-full hover:shadow-2xl transition-all duration-500 bg-white/30 dark:bg-gray-800/50 backdrop-blur-lg border border-white/30 rounded-xl overflow-hidden transform hover:scale-105'>
        <CardContent className='p-4 flex flex-col items-center text-center group'>
          <div className='mb-2 w-full h-24 overflow-hidden rounded-lg'>
            <ImageLoader
              prompt={imagePrompt}
              className='w-full h-full object-cover transition-all duration-300 transform group-hover:scale-110'
            />
          </div>
          <div className='icon-wrapper mb-2'>
            <Icon
              className={\`w-8 h-8 \${color} group-hover:scale-110 transition-all duration-300 transform group-hover:rotate-12\`}
            />
          </div>
          <h3 className='text-lg sm:text-xl font-bold mb-2 text-white'>{title}</h3>
          <p className='text-sm sm:text-base text-white/90'>{description}</p>
        </CardContent>
      </Card>
    </motion.div>
  );
};

const LandingPage = () => {
  const [isDarkMode, setIsDarkMode] = useState(false);

  const toggleTheme = () => {
    setIsDarkMode((prevMode) => {
      const newMode = !prevMode;
      localStorage.setItem("theme", newMode ? "dark" : "light");
      return newMode;
    });
  };

  useEffect(() => {
    const savedTheme = localStorage.getItem("theme");
    if (savedTheme === "dark") {
      setIsDarkMode(true);
    }
  }, []);

  const features = [
  {
    icon: Bot,
    title: "Intelligens Virtuális Asszisztensek",
    description:
      "Forradalmasítsa az ügyfélkapcsolatokat MI-vezérelt virtuális asszisztenseinkkel, amelyek képesek összetett kérdések kezelésére és minden interakcióból tanulnak.",
    color: "text-red-600",
    imagePrompt:
      "Egy futurisztikus holografikus MI-asszisztens kommunikál az ügyfelekkel",
  },
  {
    icon: Zap,
    title: "Fejlett Prediktív Analitika",
    description:
      "Használja ki a big data erejét élvonalbeli prediktív modelljeinkkel, amelyek lehetővé teszik a piaci trendek előrejelzését és az informált döntéshozatalt.",
    color: "text-white",
    imagePrompt:
      "3D holografikus kijelző, amely összetett prediktív modelleket és adatáramlásokat mutat",
  },
  {
    icon: Code,
    title: "Egyedi MI-fejlesztés",
    description:
      "MI-szakértőink csapata testreszabott megoldásokat hoz létre az Ön egyedi üzleti kihívásainak kezelésére és az innováció elősegítésére.",
    color: "text-green-600",
    imagePrompt:
      "MI-fejlesztők együttműködése egy high-tech, futurisztikus irodatérben",
  },
  {
    icon: Share2,
    title: "Zökkenőmentes MI-integráció",
    description:
      "Erőfeszítés nélkül építse be az MI-képességeket meglévő infrastruktúrájába fejlett integrációs keretrendszereinkkel és API-jainkkal.",
    color: "text-red-600",
    imagePrompt:
      "A zökkenőmentes MI-integráció vizuális ábrázolása különböző üzleti rendszerekkel",
  },
  {
    icon: Package,
    title: "Kognitív Folyamatautomatizálás",
    description:
      "Alakítsa át működését MI-vezérelt automatizálási megoldásainkkal, amelyeket összetett feladatok kezelésére és a szervezet egészében a hatékonyság javítására terveztünk.",
    color: "text-white",
    imagePrompt:
      "MI-vezérelt robotok és digitális rendszerek harmonikus együttműködése egy futurisztikus gyárban",
  },
  {
    icon: Download,
    title: "Adaptív MI-ökoszisztémák",
    description:
      "Maradjon az innováció élvonalában önfejlesztő MI-modelljeinkkel, amelyek folyamatosan alkalmazkodnak az új adatokhoz és a változó üzleti környezethez.",
    color: "text-green-600",
    imagePrompt:
      "Egy dinamikus, fejlődő MI-ökoszisztéma ábrázolása összekapcsolt neurális hálózatokként",
  },
];

  return (
    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>
      <div className='min-h-screen flex flex-col bg-gradient-to-br from-red-500 via-white to-green-500 text-white relative'>
        <div
          className='absolute inset-0 opacity-10 bg-repeat'
          style={{
            backgroundImage:
              "url('data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')",
          }}></div>

        <div className='absolute top-0 left-0 w-full h-full pointer-events-none'>
          <svg
            className='w-full h-full opacity-5'
            xmlns='http://www.w3.org/2000/svg'
            viewBox='0 0 100 100'>
            <path
              d='M30,10 L50,50 L70,10 M30,90 L50,50 L70,90'
              fill='none'
              stroke='white'
              strokeWidth='0.5'
            />
            <circle
              cx='50'
              cy='50'
              r='40'
              fill='none'
              stroke='white'
              strokeWidth='0.5'
            />
          </svg>
        </div>
        <header className='py-4 bg-red-600/10 backdrop-blur-lg text-white shadow-lg'>
          <div className='container mx-auto text-center'>
            <h1 className='text-2xl sm:text-3xl md:text-4xl font-bold mb-2'>
  Üdvözöljük a NeuralNexnél
</h1>
<marquee className='text-base sm:text-lg mb-4'>
  Szabadítsa fel a mesterséges intelligencia erejét a NeuralNexszel!
</marquee>
<p className='text-xl mb-4'>
  Emelje vállalkozását a következő szintre élvonalbeli MI-megoldásainkkal
</p>
            <button
              onClick={() => {
                window.location.href = "/start";
              }}
              className='bg-white/20 hover:bg-white/30 backdrop-blur-lg text-white text-base font-bold py-2 px-6 rounded-full transition-all duration-300 border border-white/30'>
              MI-lehetőségek felfedezése
            </button>
          </div>
        </header>
        <div className='h-1 bg-white/20 backdrop-blur-lg'></div>
<main className='flex-grow bg-white/10 backdrop-blur-lg py-24 relative overflow-hidden'>
          <div className='container mx-auto px-4'>
            <h2 className='text-3xl sm:text-4xl font-bold mb-8 sm:mb-12 text-center text-white'>
              Átalakító MI-megoldások minden iparág számára
            </h2>
            <div className='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 sm:gap-6 lg:gap-8'>
              {features.map((feature, index) => (
                <Feature
                  key={index}
                  {...feature}
                  imagePrompt={feature.imagePrompt}
                />
              ))}
            </div>
          </div>
        </main>

        <footer className='bg-green-600/10 backdrop-blur-lg py-8 sm:py-12 text-white shadow-lg'>
          <div className='container mx-auto px-4'>
            <div className='flex flex-col sm:flex-row justify-between items-center'>
              <div className='mb-6 sm:mb-0'>
                <h3 className='text-xl sm:text-2xl font-bold mb-2'>NeuralNex</h3>
<p className='text-sm sm:text-base text-gray-400'>
  &copy; 2024 NeuralNex. Minden jog fenntartva.
</p>
              </div>
              <nav className='flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-6'>
                <a
  href='/solutions'
  className='hover:text-white transition-colors duration-300'>
  MI-megoldások
</a>
<a
  href='/case-studies'
  className='hover:text-red-400 transition-colors duration-300'>
  Sikertörténetek
</a>
<a
  href='/contact'
  className='hover:text-red-400 transition-colors duration-300'>
  Partnerség
</a>
              </nav>
            </div>
          </div>
        </footer>
      </div>
    </ThemeContext.Provider>
  );
};

export default LandingPage;

//1726708s
"
`;

exports[`should update search replace with a single block 6`] = `
"// aclock.tsx
import React, { useEffect, useRef, useState } from "react";
import type { FC } from "react";
// Remove this line as we're not using Emotion

export const SportyClock: FC<{}> = () => {
  const canvasRef = useRef<HTMLCanvasElement>(null);

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas?.getContext("2d");
    if (!canvas || !ctx) return;
    const radius = canvas.height / 2;
    ctx.translate(radius, radius);

    const drawFace = (ctx: CanvasRenderingContext2D, radius: number) => {
      ctx.beginPath();
      ctx.arc(0, 0, radius, 0, 2 * Math.PI);
      ctx.fillStyle = "#001f3f"; // Dark navy color
      ctx.fill();
      ctx.lineWidth = 2;
      ctx.strokeStyle = "#ffffff";
      ctx.stroke();
    };
    const drawNumbers = (ctx: CanvasRenderingContext2D, radius: number) => {
      ctx.font = \`bold \${radius * 0.13}px 'Arial', sans-serif\`;
      ctx.textBaseline = "middle";
      ctx.textAlign = "center";
      ctx.fillStyle = "#ffffff";
      // Draw sporty lines
      for (let i = 0; i < 60; i++) {
        const ang = (i * Math.PI) / 30;
        ctx.beginPath();
        ctx.rotate(ang);
        ctx.moveTo(radius * 0.9, 0);
        ctx.lineTo(radius, 0);
        ctx.strokeStyle = i % 5 === 0 ? "#ffffff" : "#a0a0a0";
        ctx.lineWidth = i % 5 === 0 ? 3 : 1;
        ctx.stroke();
        ctx.rotate(-ang);
      }
      for (let num = 1; num <= 12; num++) {
        const ang = (num * Math.PI) / 6;
        ctx.rotate(ang);
        ctx.translate(0, -radius * 0.75);
        ctx.rotate(-ang);
        ctx.fillText(num.toString(), 0, 0);
        ctx.rotate(ang);
        ctx.translate(0, radius * 0.75);
        ctx.rotate(-ang);
      }
    };

    const drawTime = (ctx: CanvasRenderingContext2D, radius: number) => {
      const now = new Date();
      const hour = now.getHours();
      const minute = now.getMinutes();
      const second = now.getSeconds();

      // Digital display
      ctx.save();
      ctx.font = \`bold \${radius * 0.15}px 'Arial', sans-serif\`;
      ctx.fillStyle = "#ffffff";
      ctx.textAlign = "center";
      ctx.fillText(
        \`\${hour.toString().padStart(2, "0")}:\${minute.toString().padStart(2, "0")}:\${second.toString().padStart(2, "0")}\`,
        0,
        radius * 0.5,
      );
      ctx.restore();
      // Hour
      ctx.save();
      const hourAng = ((hour % 12) + minute / 60) * (Math.PI / 6);
      ctx.rotate(hourAng);
      ctx.lineWidth = 6;
      ctx.strokeStyle = "#ffffff";
      ctx.beginPath();
      ctx.moveTo(0, 0);
      ctx.lineTo(0, -radius * 0.5);
      ctx.stroke();
      ctx.restore();
      // Minute
      ctx.save();
      const minuteAng = (minute + second / 60) * (Math.PI / 30);
      ctx.rotate(minuteAng);
      ctx.lineWidth = 6;
      ctx.strokeStyle = "#ff3333";
      ctx.beginPath();
      ctx.moveTo(0, 0);
      ctx.lineTo(0, -radius * 0.7);
      ctx.stroke();
      ctx.restore();
      // Second
      ctx.save();
      const secondAng = second * (Math.PI / 30);
      ctx.rotate(secondAng);
      ctx.lineWidth = 3;
      ctx.strokeStyle = "#ff9999";
      ctx.beginPath();
      ctx.moveTo(0, 0);
      ctx.lineTo(0, -radius * 0.85);
      ctx.stroke();
      ctx.restore();
      // Center dot
      ctx.beginPath();
      ctx.arc(0, 0, 5, 0, 2 * Math.PI);
      ctx.fillStyle = "#ffffff";
      ctx.fill();
    };

    const drawClock = () => {
      drawFace(ctx, radius);
      drawNumbers(ctx, radius);
      drawTime(ctx, radius);
    };

    const intervalId = setInterval(() => {
      ctx.clearRect(-radius, -radius, canvas.width, canvas.height);
      drawClock();
    }, 1000);
    drawClock();
    return () => {
      clearInterval(intervalId);
    };
  }, []);

  return (
    <div className='relative flex items-center justify-center min-h-screen bg-gradient-to-br from-navy-900 to-navy-700 overflow-hidden'>
      <div
        className='absolute inset-0 opacity-20 bg-repeat bg-[length:100px_100px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.3'%3E%3Ccircle cx='50' cy='50' r='40'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "rotate 120s linear infinite",
        }}></div>
      <div
        className='absolute inset-0 opacity-15 bg-repeat bg-[length:80px_80px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.2'%3E%3Cpath d='M0 0h40v40H0V0zm40 40h40v40H40V40zm0-40h2l-2 2V0zm0 4l4-4h2l-6 6V4zm0 4l8-8h2L40 10V8zm0 4L52 0h2L40 14v-2zm0 4L56 0h2L40 18v-2zm0 4L60 0h2L40 22v-2zm0 4L64 0h2L40 26v-2zm0 4L68 0h2L40 30v-2zm0 4L72 0h2L40 34v-2zm0 4L76 0h2L40 38v-2zm0 4L80 0v2L42 40h-2zm4 0L80 4v2L46 40h-2zm4 0L80 8v2L50 40h-2zm4 0l28-28v2L54 40h-2zm4 0l24-24v2L58 40h-2zm4 0l20-20v2L62 40h-2zm4 0l16-16v2L66 40h-2zm4 0l12-12v2L70 40h-2zm4 0l8-8v2l-6 6h-2zm4 0l4-4v2l-2 2h-2z'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "rotate 90s linear infinite reverse",
        }}></div>
      <div
        className='absolute inset-0 opacity-10 bg-repeat bg-[length:60px_60px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        }}></div>
      <div
        className='absolute inset-0 opacity-20 bg-repeat bg-[length:100px_100px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.3'%3E%3Ccircle cx='50' cy='50' r='40'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "rotate 120s linear infinite",
        }}></div>
      <div
        className='absolute inset-0 opacity-15 bg-repeat bg-[length:80px_80px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.2'%3E%3Cpath d='M0 0h40v40H0V0zm40 40h40v40H40V40zm0-40h2l-2 2V0zm0 4l4-4h2l-6 6V4zm0 4l8-8h2L40 10V8zm0 4L52 0h2L40 14v-2zm0 4L56 0h2L40 18v-2zm0 4L60 0h2L40 22v-2zm0 4L64 0h2L40 26v-2zm0 4L68 0h2L40 30v-2zm0 4L72 0h2L40 34v-2zm0 4L76 0h2L40 38v-2zm0 4L80 0v2L42 40h-2zm4 0L80 4v2L46 40h-2zm4 0L80 8v2L50 40h-2zm4 0l28-28v2L54 40h-2zm4 0l24-24v2L58 40h-2zm4 0l20-20v2L62 40h-2zm4 0l16-16v2L66 40h-2zm4 0l12-12v2L70 40h-2zm4 0l8-8v2l-6 6h-2zm4 0l4-4v2l-2 2h-2z'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "rotate 90s linear infinite reverse",
        }}></div>
      <div
        className='absolute inset-0 opacity-10 bg-repeat bg-[length:60px_60px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        }}></div>
      <div
        className='absolute inset-0 opacity-20 bg-repeat bg-[length:100px_100px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.3'%3E%3Ccircle cx='50' cy='50' r='40'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "rotate 120s linear infinite",
        }}></div>
      <div
        className='absolute inset-0 opacity-15 bg-repeat bg-[length:80px_80px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='80' height='80' viewBox='0 0 80 80'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.2'%3E%3Cpath d='M0 0h40v40H0V0zm40 40h40v40H40V40zm0-40h2l-2 2V0zm0 4l4-4h2l-6 6V4zm0 4l8-8h2L40 10V8zm0 4L52 0h2L40 14v-2zm0 4L56 0h2L40 18v-2zm0 4L60 0h2L40 22v-2zm0 4L64 0h2L40 26v-2zm0 4L68 0h2L40 30v-2zm0 4L72 0h2L40 34v-2zm0 4L76 0h2L40 38v-2zm0 4L80 0v2L42 40h-2zm4 0L80 4v2L46 40h-2zm4 0L80 8v2L50 40h-2zm4 0l28-28v2L54 40h-2zm4 0l24-24v2L58 40h-2zm4 0l20-20v2L62 40h-2zm4 0l16-16v2L66 40h-2zm4 0l12-12v2L70 40h-2zm4 0l8-8v2l-6 6h-2zm4 0l4-4v2l-2 2h-2z'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "rotate 90s linear infinite reverse",
        }}></div>
      <div
        className='absolute inset-0 opacity-10 bg-repeat bg-[length:60px_60px]'
        style={{
          backgroundImage: \`url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Cg fill='%23FFFFFF' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/svg%3E")\`,
          animation: "pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite",
        }}></div>
      <canvas
        ref={canvasRef}
        width='320'
        height='320'
        className='w-72 h-72 sm:w-88 sm:h-88 md:w-104 md:h-104 rounded-full shadow-lg bg-white/10 backdrop-blur-sm p-4 transition-all duration-300 ease-in-out hover:scale-105 hover:shadow-2xl z-10 border-4 border-blue-200'
      />
    </div>
  );
};

export default SportyClock;

const additionalKeyframes = \`
  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
\`;

const styleTag = document.createElement("style");
styleTag.textContent = additionalKeyframes;
document.head.appendChild(styleTag);

const additionalKeyframes = \`
  @keyframes rotate {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
\`;

const styleTag = document.createElement("style");
styleTag.textContent = additionalKeyframes;
document.head.appendChild(styleTag);"
`;

exports[`x-landing 7`] = `
"
// x-landing.tsx
import { ImageLoader } from '@/components/ui/image-loader';

export default function SpikeLand() {
  return (
    <div className="bg-black text-white min-h-screen">
      <header className="text-center py-8">
        <h1 className="text-4xl font-bold mb-2">Spike.land: Create Anything, Instantly</h1>
        <p className="text-lg mb-4">The fastest, easiest way to build websites, apps, and games with AI coding.</p>
        <button className="bg-red-600 text-white px-6 py-2 rounded-full font-semibold">Start Creating for Free</button>
      </header>
      {/* We'll add more sections here */}
      <section className="max-w-4xl mx-auto mb-16">
        <ImageLoader 
          prompt="A person using a tablet in a dimly lit room with a large screen showing Spike.land interface" 
          aspect_ratio="16:9"
        />
      </section>
      
      <section className="max-w-4xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">What Our Users Say</h2>
        <div className="grid grid-cols-3 gap-4">
          {[
            { name: 'Sarah J., Graphic Designer', quote: 'Spike.land is a game-changer for us creatives. We create without limits. It\\'s so easy to use, even my kids can build their own websites now!' },
            { name: 'Mark K., Entrepreneur', quote: 'I\\'ve tried many website builders, but Spike.land is on a league of its own. The AI assistance is like having a pro developer by my side!' },
            { name: 'Dr. Emily R., Computer Science Professor', quote: 'As an educator, I\\'ve found Spike.land to be an invaluable tool for teaching web development. It makes learning to code fun and accessible for students of all skill levels.' }
          ].map((testimonial, index) => (
            <div key={index} className="bg-gray-800 p-6 rounded-lg">
              <p className="text-sm mb-4">"{testimonial.quote}"</p>
              <p className="text-xs text-gray-400">- {testimonial.name}</p>
            </div>
          ))}
        </div>
      </section>
      
      <section className="max-w-4xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">How It Works</h2>
        <div className="flex justify-between">
          {['Ideate', 'Create', 'Launch'].map((step, index) => (
            <div key={index} className="text-center">
              <ImageLoader prompt={\`Icon for \${step} step in app creation process\`} aspect_ratio="1:1" className="w-24 h-24 mb-4" />
              <h3 className="text-xl font-semibold mb-2">{index + 1}. {step}</h3>
              <p className="text-sm text-gray-400">Description of the {step.toLowerCase()} step.</p>
            </div>
          ))}
        </div>
      </section>
      
      <section className="max-w-4xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">What Our Users Say</h2>
        <div className="grid grid-cols-3 gap-4">
          {[
            { name: 'Sarah J., Graphic Designer', quote: 'Spike.land is a game-changer for us creatives. We create without limits. It\\'s so easy to use, even my kids can build their own websites now!' },
            { name: 'Mark K., Entrepreneur', quote: 'I\\'ve tried many website builders, but Spike.land is on a league of its own. The AI assistance is like having a pro developer by my side!' },
            { name: 'Dr. Emily R., Computer Science Professor', quote: 'As an educator, I\\'ve found Spike.land to be an invaluable tool for teaching web development. It makes learning to code fun and accessible for students of all skill levels.' }
          ].map((testimonial, index) => (
            <div key={index} className="bg-gray-800 p-6 rounded-lg">
              <p className="text-sm mb-4">"{testimonial.quote}"</p>
              <p className="text-xs text-gray-400">- {testimonial.name}</p>
            </div>
          ))}
        </div>
      </section>
      
      <section className="max-w-6xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">Create Without Limits</h2>
        <div className="grid grid-cols-3 gap-4">
          {['Website Prototyping', 'AI Personal Assistant', 'Code Free Creation', 'Collaborate in Real-Time', 'Works on Any Device', 'Share with the World'].map((title, index) => (
            <div key={index} className="bg-gray-800 p-4 rounded-lg">
              <ImageLoader prompt={\`Icon for \${title}\`} aspect_ratio="1:1" className="w-16 h-16 mb-2" />
              <h3 className="text-lg font-semibold mb-2">{title}</h3>
              <p className="text-sm text-gray-400">Short description of the feature goes here.</p>
            </div>
          ))}
        </div>
      </section>
      
      <section className="max-w-4xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">What Our Users Say</h2>
        <div className="grid grid-cols-3 gap-4">
          {[
            { name: 'Sarah J., Graphic Designer', quote: 'Spike.land is a game-changer for us creatives. We create without limits. It\\'s so easy to use, even my kids can build their own websites now!' },
            { name: 'Mark K., Entrepreneur', quote: 'I\\'ve tried many website builders, but Spike.land is on a league of its own. The AI assistance is like having a pro developer by my side!' },
            { name: 'Dr. Emily R., Computer Science Professor', quote: 'As an educator, I\\'ve found Spike.land to be an invaluable tool for teaching web development. It makes learning to code fun and accessible for students of all skill levels.' }
          ].map((testimonial, index) => (
            <div key={index} className="bg-gray-800 p-6 rounded-lg">
              <p className="text-sm mb-4">"{testimonial.quote}"</p>
              <p className="text-xs text-gray-400">- {testimonial.name}</p>
            </div>
          ))}
        </div>
      </section>
      
      <section className="max-w-4xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">How It Works</h2>
        <div className="flex justify-between">
          {['Ideate', 'Create', 'Launch'].map((step, index) => (
            <div key={index} className="text-center">
              <ImageLoader prompt={\`Icon for \${step} step in app creation process\`} aspect_ratio="1:1" className="w-24 h-24 mb-4" />
              <h3 className="text-xl font-semibold mb-2">{index + 1}. {step}</h3>
              <p className="text-sm text-gray-400">Description of the {step.toLowerCase()} step.</p>
            </div>
          ))}
        </div>
      </section>
      
      <section className="max-w-4xl mx-auto mb-16">
        <h2 className="text-3xl font-bold text-center mb-8">What Our Users Say</h2>
        <div className="grid grid-cols-3 gap-4">
          {[
            { name: 'Sarah J., Graphic Designer', quote: 'Spike.land is a game-changer for us creatives. We create without limits. It\\'s so easy to use, even my kids can build their own websites now!' },
            { name: 'Mark K., Entrepreneur', quote: 'I\\'ve tried many website builders, but Spike.land is on a league of its own. The AI assistance is like having a pro developer by my side!' },
            { name: 'Dr. Emily R., Computer Science Professor', quote: 'As an educator, I\\'ve found Spike.land to be an invaluable tool for teaching web development. It makes learning to code fun and accessible for students of all skill levels.' }
          ].map((testimonial, index) => (
            <div key={index} className="bg-gray-800 p-6 rounded-lg">
              <p className="text-sm mb-4">"{testimonial.quote}"</p>
              <p className="text-xs text-gray-400">- {testimonial.name}</p>
            </div>
          ))}
        </div>
      </section>
    </div>
  );
}
  "
`;
